{
    "alphabet": "[\"a\", \"b\"]",
    "states": "[S0, S1]",
    "deterministic": "False",
    "reachableStates": "[S0, S1]",
    "accepts": "False",
    "accepts_empty": "False",
    "languageIncluded": "[True, None]",
    "product": {
        "_states": "[(S0,S0), (S0,S1), (S1,S0), (S1,S1)]",
        "_transitions": {
            "(S1,S1)": {
                "b": "[(S0,S0)]"
            },
            "(S0,S0)": {
                "a": "[(S1,S1)]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[(S0,S0), (S0,S1), (S1,S0), (S1,S1)]",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "eliminateEpsilon": {
        "_states": "[S0, S1]",
        "_transitions": {
            "S0": {
                "a": "[S1]"
            },
            "S1": {
                "b": "[S0]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[S0, S1]",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "complete": {
        "_states": "[S, S0, S1]",
        "_transitions": {
            "S0": {
                "a": "[S1]",
                "b": "[S]"
            },
            "S1": {
                "a": "[S]",
                "b": "[S0]"
            },
            "S": {
                "a": "[S]",
                "b": "[S]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[S0, S1]",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "complement": {
        "_states": "[S, {S0,S1}, {S0}, {S1}]",
        "_transitions": {
            "{S0,S1}": {
                "a": "[{S1}]",
                "b": "[{S0}]"
            },
            "{S0}": {
                "a": "[{S1}]",
                "b": "[S]"
            },
            "{S1}": {
                "a": "[S]",
                "b": "[{S0}]"
            },
            "S": {
                "a": "[S]",
                "b": "[S]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[{S0,S1}]",
        "_final_states": "[S, {S0,S1}, {S0}, {S1}]",
        "_generalized_acceptance_sets": {}
    },
    "minimize": {
        "_states": "",
        "_transitions": {},
        "_epsilon_transitions": {},
        "_initial_states": "",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "convert_to_DFA": {
        "_states": "[{S0,S1}, {S0}, {S1}]",
        "_transitions": {
            "{S0,S1}": {
                "a": "[{S1}]",
                "b": "[{S0}]"
            },
            "{S0}": {
                "a": "[{S1}]"
            },
            "{S1}": {
                "b": "[{S0}]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[{S0,S1}]",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "relabel": {
        "_states": "[S1, S2]",
        "_transitions": {
            "S1": {
                "a": "[S2]"
            },
            "S2": {
                "b": "[S1]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[S1, S2]",
        "_final_states": "",
        "_generalized_acceptance_sets": {
            "A": "[S1]",
            "B": "[S2]"
        }
    },
    "convert_to_DSL": "finite state automaton TestName {\n\tS0 initial -- a --> S1 initial\n\tS1 -- b --> S0\n}\n",
    "languageIncluded_refModel": "[True, None]",
    "product_refModel": {
        "_states": "[(S0,S0), (S0,S1), (S1,S0), (S1,S1)]",
        "_transitions": {
            "(S1,S1)": {
                "b": "[(S0,S1)]"
            },
            "(S1,S0)": {
                "b": "[(S0,S0)]"
            },
            "(S0,S1)": {
                "a": "[(S1,S0)]"
            },
            "(S0,S0)": {
                "a": "[(S1,S1)]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[(S0,S0), (S1,S0)]",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    },
    "languageEmptyBuchi": "[False, [b], [a, b], [(S0,F0), (S1,F0)], [(S0,F0), (S1,F1)]]",
    "productBuchi": {
        "_states": "[(((S0,F0),(S0,F0)),F0), (((S0,F0),(S0,F0)),F1), (((S0,F0),(S0,F1)),F0), (((S0,F0),(S0,F1)),F1), (((S0,F0),(S1,F0)),F0), (((S0,F0),(S1,F0)),F1), (((S0,F0),(S1,F1)),F0), (((S0,F0),(S1,F1)),F1), (((S0,F1),(S0,F0)),F0), (((S0,F1),(S0,F0)),F1), (((S0,F1),(S0,F1)),F0), (((S0,F1),(S0,F1)),F1), (((S0,F1),(S1,F0)),F0), (((S0,F1),(S1,F0)),F1), (((S0,F1),(S1,F1)),F0), (((S0,F1),(S1,F1)),F1), (((S1,F0),(S0,F0)),F0), (((S1,F0),(S0,F0)),F1), (((S1,F0),(S0,F1)),F0), (((S1,F0),(S0,F1)),F1), (((S1,F0),(S1,F0)),F0), (((S1,F0),(S1,F0)),F1), (((S1,F0),(S1,F1)),F0), (((S1,F0),(S1,F1)),F1), (((S1,F1),(S0,F0)),F0), (((S1,F1),(S0,F0)),F1), (((S1,F1),(S0,F1)),F0), (((S1,F1),(S0,F1)),F1), (((S1,F1),(S1,F0)),F0), (((S1,F1),(S1,F0)),F1), (((S1,F1),(S1,F1)),F0), (((S1,F1),(S1,F1)),F1)]",
        "_transitions": {
            "(((S0,F1),(S0,F1)),F0)": {
                "a": "[(((S1,F1),(S1,F1)),F0)]"
            },
            "(((S0,F1),(S0,F0)),F0)": {
                "a": "[(((S1,F1),(S1,F1)),F0)]"
            },
            "(((S1,F0),(S1,F0)),F0)": {
                "b": "[(((S0,F0),(S0,F0)),F0)]"
            },
            "(((S1,F0),(S1,F1)),F0)": {
                "b": "[(((S0,F0),(S0,F0)),F0)]"
            },
            "(((S0,F0),(S0,F1)),F0)": {
                "a": "[(((S1,F1),(S1,F1)),F1)]"
            },
            "(((S0,F0),(S0,F0)),F0)": {
                "a": "[(((S1,F1),(S1,F1)),F1)]"
            },
            "(((S1,F1),(S1,F0)),F0)": {
                "b": "[(((S0,F0),(S0,F0)),F1)]"
            },
            "(((S1,F1),(S1,F1)),F0)": {
                "b": "[(((S0,F0),(S0,F0)),F1)]"
            },
            "(((S0,F1),(S0,F1)),F1)": {
                "a": "[(((S1,F1),(S1,F1)),F1)]"
            },
            "(((S0,F1),(S0,F0)),F1)": {
                "a": "[(((S1,F1),(S1,F1)),F0)]"
            },
            "(((S1,F0),(S1,F0)),F1)": {
                "b": "[(((S0,F0),(S0,F0)),F1)]"
            },
            "(((S1,F0),(S1,F1)),F1)": {
                "b": "[(((S0,F0),(S0,F0)),F0)]"
            },
            "(((S0,F0),(S0,F1)),F1)": {
                "a": "[(((S1,F1),(S1,F1)),F1)]"
            },
            "(((S0,F0),(S0,F0)),F1)": {
                "a": "[(((S1,F1),(S1,F1)),F0)]"
            },
            "(((S1,F1),(S1,F0)),F1)": {
                "b": "[(((S0,F0),(S0,F0)),F1)]"
            },
            "(((S1,F1),(S1,F1)),F1)": {
                "b": "[(((S0,F0),(S0,F0)),F0)]"
            }
        },
        "_epsilon_transitions": {},
        "_initial_states": "[(((S0,F0),(S0,F0)),F0), (((S0,F0),(S1,F0)),F0), (((S1,F0),(S0,F0)),F0), (((S1,F0),(S1,F0)),F0)]",
        "_final_states": "[(((S0,F0),(S0,F0)),F0), (((S0,F0),(S0,F0)),F1), (((S0,F0),(S0,F1)),F0), (((S0,F0),(S1,F0)),F0), (((S0,F0),(S1,F1)),F0), (((S0,F0),(S1,F1)),F1), (((S0,F1),(S0,F0)),F1), (((S0,F1),(S1,F1)),F1), (((S1,F0),(S0,F0)),F1), (((S1,F0),(S1,F1)),F1), (((S1,F1),(S0,F0)),F0), (((S1,F1),(S0,F0)),F1), (((S1,F1),(S0,F1)),F0), (((S1,F1),(S1,F0)),F0), (((S1,F1),(S1,F1)),F0), (((S1,F1),(S1,F1)),F1)]",
        "_generalized_acceptance_sets": {}
    },
    "minimizeBuchi": {
        "_states": "",
        "_transitions": {},
        "_epsilon_transitions": {},
        "_initial_states": "",
        "_final_states": "",
        "_generalized_acceptance_sets": {}
    }
}